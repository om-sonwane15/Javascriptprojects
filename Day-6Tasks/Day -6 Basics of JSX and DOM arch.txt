Day -6 Basics of JSX and DOM architecture

JSX (JavaScript XML) is a syntax extension for JavaScript, it is commonly used in react to describe the UI structure. It also allows to write HTML-like syntax inside JavaScript, making it easier to build UI components.

Syntax- 
const name = "Om";
const greeting = <h1>Hello, {name}!</h1>;
The value of name will be rendered within the <h1> element.
&
const element = <h1>Hello, JSX!</h1>;
function Greeting() {
  return <h1>this is JSX!</h1>;
}

Attributes of JXS (camelCase for properties like className, onClick)
Syntax- const button = <button className="btn-primary">Buy Now</button>;

JSX can be used inside functional components to define reusable UI elements.
function Brother(props) {
  return <h1>Hello, {props.name}!</h1>;
}
const app=<Greeting name="Om"/>;


Basics of DOM Architecture-
DOM is a structure that help to present all elements in the browser like buttons, paragraphs, headings. When changed, virtual DOM in react is used as it checks what is changed and update only the specific part for smoother experience.React.js uses a unique DOM architecture to efficiently update and render the UI.

Real DOM (Browser DOM) is the actual structure of the webpage. The Real DOM represents the HTML structure as a tree of nodes.
Example-
<!DOCTYPE html>
<html>
  <head>
    <title>About me</title>
  </head>
  <body>
    <div id="root">
      <h1>Hi, this is website</h1>
      <button>Click Me</button>
    </div>
  </body>
</html>


Virtual DOM (React's optimized version), when state changes, react compares the new Virtual DOM with the old one and updates only the changed parts.  It is basically a lightweight copy of the Real DOM.
Example-
Before Click(initial Render)
function App() {
  return (
    <div>
      <h1>Buy Now</h1>
      <button>Click Here</button>
    </div>
  );
}

After Click(state Changed)
function App() {
  const [count, setCount] = React.useState(0);
  return (
    <div>
      <h1>Counter: {count}</h1>
      <button onClick={() => setCount(count + 1)}>AddMore</button>
    </div>
  );
}
Here it compares the differences of the old and new Virtual DOM.



